on:
  push:
    branches:
      - main
  workflow_dispatch:

name: Deploy
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    outputs:
        gitsha: ${{steps.gitsha.outputs.sha}}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Clean
      run: make clean
    - id: gitsha
      run: | 
        gitsha=$(git rev-parse --short "$GITHUB_SHA")
        echo "::set-output name=sha::$gitsha"
    - name: build
      run: |
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        make all BINARY_NAME=gitops-${{matrix.os}}-${{steps.gitsha.outputs.sha}}
    - name: Store gitops binaries
      uses: actions/upload-artifact@v2
      with:
          name: gitops-binaries
          path: bin
          retention-days: 1

  coverage:
    env:
        GITHUB_TOKEN: "${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}"
        KUBEBUILDER_ASSETS: ${{ github.workspace }}/kubebuilder/bin
        CHECKPOINT_DISABLE: 1
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: checkout
      uses: actions/checkout@v2
    - name: Install UI Deps
      run: npm ci
    - name: Build UI Assets
      run: make cmd/gitops/ui/run/dist/main.js
    - name: Set up kubebuilder
      uses: fluxcd/pkg/actions/kubebuilder@main
    - name: Set up flux dir but let dependencies install flux
      run: mkdir -p pkg/flux/bin && tools/download-deps.sh $PWD/tools/dependencies.toml
    - name: Setup Kubernetes
      uses: engineerd/setup-kind@v0.5.0
      with:
        name: "${{ format('katc-{0}', github.run_id) }}"
        version: "v0.11.0"
        image: kindest/node:v1.20.7
        config: "./test/acceptance/test/configs/kind-config.yaml"
    - name: Fake Install flux
      run: mkdir -p pkg/flux/bin && touch pkg/flux/bin/flux
    - name: unit tests with coverage
      run: |
        go get -u github.com/jstemmer/go-junit-report
        mkdir artefacts
        go test -cover  -covermode=atomic -coverprofile=artefacts/.coverprofile-unittests -v ./... -tags unittest | go-junit-report > artefacts/unit-test-results.xml
    - name: Store unit test coverage results
      uses: actions/upload-artifact@v2
      with:
          name: unit-tests-artefacts
          path: artefacts
          retention-days: 1
  
  acceptance-tests:
    runs-on: ubuntu-latest
    needs: [build, coverage]
    env:
        GITHUB_ORG: weaveworks-gitops-test
        GITHUB_TOKEN: "${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}"
        GITHUB_KEY: "${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}"
        GITLAB_ORG: weave-gitops
        GITLAB_PUBLIC_GROUP: public-weave-gitops
        GITLAB_SUBGROUP: weave-gitops-sub
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        GITLAB_KEY: ${{ secrets.GITLAB_KEY }}
        ARTIFACTS_BASE_DIR: "/tmp/gitops-test"
        CHECKPOINT_DISABLE: 1
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup selenium standalone server
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        sudo apt-get install -y google-chrome-stable

        # https://chromedriver.storage.googleapis.com/
        CHROMEDRIVER_VERSION=94.0.4606.61

        wget https://chromedriver.storage.googleapis.com/"${CHROMEDRIVER_VERSION}"/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv -f chromedriver /usr/local/bin/chromedriver

        wget  https://selenium-release.storage.googleapis.com/3.14/selenium-server-standalone-3.14.0.jar

        xvfb-run -a --server-args="-screen 0 1280x1024x24" java -jar ./selenium-server-standalone-3.14.0.jar &
    - name: Setup Kubernetes
      shell: bash
      env:
        KIND_CLUSTER_NAME: ${{ format('katc-{0}', github.run_id) }}
        KIND_CLUSTER_IMAGE: kindest/node:v1.21.1
      run: |
        make local-kind-cluster-with-registry
    - name: Kind-check
      run: |
       kubectl get pods -A
    - name: Download gitops binaries
      uses: actions/download-artifact@v2
      with:
        name: gitops-binaries
        path: bin
    - name: Change bin permissions
      run: |
        cp bin/gitops-ubuntu-latest-* bin/gitops
        chmod +x bin/gitops
        ls -la bin
    - name: Download dependecies
      run: |
        make dependencies
    - name: Set up ssh
      uses: ./.github/actions/setup-ssh
      with:
        github-ssh-private-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        gitlab-ssh-private-key: ${{ secrets.GITLAB_KEY }}
    - name: Configure git settings
      run: |
        git config --global init.defaultBranch main
        git config --global user.email "weave-test-user@example.com"
        git config --global user.name "Testy McTestFace"
        git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    - name: Run acceptance tests
      run: |
        export WEGO_BIN_PATH=$(pwd)/bin/gitops
        go get github.com/onsi/ginkgo/ginkgo
        go get github.com/onsi/gomega
        ACCEPTANCE_TEST_ARGS="--randomizeSuites --reportFile=${{ env. ARTIFACTS_BASE_DIR }}/test-results/acceptance-test-results.xml" make acceptance-tests
    - name: Store acceptance-tests results
      uses: actions/upload-artifact@v2
      with:
          name: acceptance-tests-artefacts
          path: ${{ env.ARTIFACTS_BASE_DIR }}
          retention-days: 1

  publish-test-results:
    runs-on: ubuntu-latest
    needs: [acceptance-tests]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install testspace client
      uses: testspace-com/setup-testspace@v1
      with:
        domain: weaveworks.testspace.com
    - name: Download artefacts
      uses: actions/download-artifact@v2
      with:
        path: results
    - name: Display structure of downloaded files
      run: ls -laR
      working-directory: results
    - name: Publish test results to Testspace
      run: |
        go get github.com/t-yuki/gocover-cobertura
        gocover-cobertura < results/unit-tests-artefacts/.coverprofile-unittests > coverage.xml
        testspace "[unit-tests]results/unit-tests-artefacts/unit-test-results.xml" "[acceptance-tests]results/acceptance-tests-artefacts/acceptance-test-results.xml" "coverage.xml"
      if: always()

  publish-binaries:
    runs-on: ${{matrix.os}}
    needs: [build, acceptance-tests]
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Download gitops binaries
      uses: actions/download-artifact@v2
      with:
        name: gitops-binaries
        path: bin
    - name: publish to s3
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - run: |
        aws s3 cp bin/gitops-${{matrix.os}}-${{needs.build.outputs.gitsha}} s3://weave-gitops/
        aws s3 cp s3://weave-gitops/gitops-${{matrix.os}}-${{needs.build.outputs.gitsha}} s3://weave-gitops/gitops-${{matrix.os}}

