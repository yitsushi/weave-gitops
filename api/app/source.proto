syntax = "proto3";

package gitops_server.v1;

option go_package = "github.com/weaveworks/weave-gitops/core/api/apps";

message Interval {
  int64 hours = 1;
  int64 minutes = 2;
  int64 seconds = 3;
}

message SourceRef {
  enum Kind {
    GitRepository = 0;
    Bucket = 1;
    HelmRepository = 2;
  };
  Kind kind = 1;
  string name = 2;
}

message Artifact {
  string checksum = 1;
  int32 lastupdateat = 2;
  string path = 3;
  string revision = 4;
  string url = 5;
}

message Condition {
  string type = 1;
  string status = 2;
  string reason = 3;
  string message = 4;
  string timestamp = 5;
}

message GitRepositoryRef {
  string branch = 1;
  string tag = 2;
  string semver = 3;
  string commit = 4;
}

message Source {
  string name = 1;
  string namespace = 2;
  string url = 3;
  GitRepositoryRef reference = 4;
  enum Type {
    Git = 0;
    Bucket = 1;
    Helm = 2;
    Chart = 3;
  };
  Type type = 5;
  string provider = 6;
  string bucketname = 7;
  string region = 8;
  string gitimplementation = 9;
  string timeout = 10;
  string secretRefName = 11;
  repeated Condition conditions = 12;
  Artifact artifact = 13;
}

message GitRepository {
  string namespace = 1;
  string name = 2;
  string url = 3;
  GitRepositoryRef reference = 4;
  string secretRef = 5;
  Interval interval = 6;
  repeated Condition conditions = 7;
}

message AddGitRepositoryReq {
  string namespace = 1;
  string app_name = 2;
  string name = 3;
  string url = 4;
  GitRepositoryRef reference = 5;
  string secret_ref = 6;
  Interval interval = 7;
}

message AddGitRepositoryRes {
  bool success = 1;
  GitRepository git_repository = 2;
}

message ListGitRepositoryReq {
  string namespace = 1;
  string app_name = 2;
}

message ListGitRepositoryRes {
  repeated GitRepository git_repositories = 1;
}

message HelmRepository {
  string namespace = 1;
  string name = 2;
  string url = 3;
  Interval interval = 4;
  repeated Condition conditions = 5;
}

message AddHelmRepositoryReq {
  string namespace = 1;
  string app_name = 2;
  string name = 3;
  string url = 4;
  Interval interval = 5;
}

message AddHelmRepositoryRes {
  bool success = 1;
  HelmRepository helm_repository = 2;
}

message ListHelmRepositoryReq {
  string namespace = 1;
  string app_name = 2;
}

message ListHelmRepositoryRes {
  repeated HelmRepository helm_repositories = 1;
}

// HelmChart
message HelmChart {
  string namespace = 1;
  string name = 2;
  SourceRef sourceRef = 3;
  string chart = 4;
  string version = 5;
  Interval interval = 6;
  repeated Condition conditions = 7;
}

message AddHelmChartReq {
  string app_name = 1;
  string namespace = 2;
  HelmChart helm_chart = 3;
}

message AddHelmChartRes {
  bool success = 1;
  HelmChart helm_chart = 2;
}

message ListHelmChartReq {
  string namespace = 1;
  string app_name = 2;
}

message ListHelmChartRes {
  repeated HelmChart helm_charts = 1;
}

// Bucket
message Bucket {
  string namespace = 1;
  string name = 2;
  string endpoint = 3;
  bool insecure = 4;
  Interval interval = 5;
  enum Provider {
    Generic = 0;
    AWS = 1;
    GCP = 2;
  };
  Provider provider = 6;
  string region = 7;
  string secretRefName = 8;
  int32  timeout = 9;
  repeated Condition conditions = 10;
}

message AddBucketReq {
  string app_name = 1;
  string namespace = 2;
  Bucket bucket = 3;
}

message AddBucketRes {
  bool success = 1;
  Bucket bucket = 2;
}

message ListBucketReq {
  string namespace = 1;
  string app_name = 2;
}

message ListBucketRes {
  repeated Bucket buckets = 1;
}
message HelmRelease {
  string release_name = 1;
  string namespace = 2;
  string name = 3;
  Interval interval = 4;
  HelmChart helm_chart = 5;
  repeated Condition conditions = 6;
}

message AddHelmReleaseReq {
  string app_name = 1;
  string namespace = 2;
  HelmRelease helm_release = 3;
}

message AddHelmReleaseRes {
  bool success = 1;
  HelmRelease helm_release = 2;
}

message ListHelmReleaseReq {
  string namespace = 1;
  string app_name = 2;
}

message ListHelmReleaseRes {
  repeated HelmRelease helm_releases = 1;
}
