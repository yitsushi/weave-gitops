// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: api/app/source.proto

package apps

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SourceRef_Kind int32

const (
	SourceRef_GitRepository  SourceRef_Kind = 0
	SourceRef_Bucket         SourceRef_Kind = 1
	SourceRef_HelmRepository SourceRef_Kind = 2
)

// Enum value maps for SourceRef_Kind.
var (
	SourceRef_Kind_name = map[int32]string{
		0: "GitRepository",
		1: "Bucket",
		2: "HelmRepository",
	}
	SourceRef_Kind_value = map[string]int32{
		"GitRepository":  0,
		"Bucket":         1,
		"HelmRepository": 2,
	}
)

func (x SourceRef_Kind) Enum() *SourceRef_Kind {
	p := new(SourceRef_Kind)
	*p = x
	return p
}

func (x SourceRef_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceRef_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_app_source_proto_enumTypes[0].Descriptor()
}

func (SourceRef_Kind) Type() protoreflect.EnumType {
	return &file_api_app_source_proto_enumTypes[0]
}

func (x SourceRef_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceRef_Kind.Descriptor instead.
func (SourceRef_Kind) EnumDescriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{1, 0}
}

type Source_Type int32

const (
	Source_Git    Source_Type = 0
	Source_Bucket Source_Type = 1
	Source_Helm   Source_Type = 2
	Source_Chart  Source_Type = 3
)

// Enum value maps for Source_Type.
var (
	Source_Type_name = map[int32]string{
		0: "Git",
		1: "Bucket",
		2: "Helm",
		3: "Chart",
	}
	Source_Type_value = map[string]int32{
		"Git":    0,
		"Bucket": 1,
		"Helm":   2,
		"Chart":  3,
	}
)

func (x Source_Type) Enum() *Source_Type {
	p := new(Source_Type)
	*p = x
	return p
}

func (x Source_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Source_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_app_source_proto_enumTypes[1].Descriptor()
}

func (Source_Type) Type() protoreflect.EnumType {
	return &file_api_app_source_proto_enumTypes[1]
}

func (x Source_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Source_Type.Descriptor instead.
func (Source_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{5, 0}
}

type Bucket_Provider int32

const (
	Bucket_Generic Bucket_Provider = 0
	Bucket_AWS     Bucket_Provider = 1
	Bucket_GCP     Bucket_Provider = 2
)

// Enum value maps for Bucket_Provider.
var (
	Bucket_Provider_name = map[int32]string{
		0: "Generic",
		1: "AWS",
		2: "GCP",
	}
	Bucket_Provider_value = map[string]int32{
		"Generic": 0,
		"AWS":     1,
		"GCP":     2,
	}
)

func (x Bucket_Provider) Enum() *Bucket_Provider {
	p := new(Bucket_Provider)
	*p = x
	return p
}

func (x Bucket_Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bucket_Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_api_app_source_proto_enumTypes[2].Descriptor()
}

func (Bucket_Provider) Type() protoreflect.EnumType {
	return &file_api_app_source_proto_enumTypes[2]
}

func (x Bucket_Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bucket_Provider.Descriptor instead.
func (Bucket_Provider) EnumDescriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{21, 0}
}

type Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hours   int64 `protobuf:"varint,1,opt,name=hours,proto3" json:"hours,omitempty"`
	Minutes int64 `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Seconds int64 `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *Interval) Reset() {
	*x = Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{0}
}

func (x *Interval) GetHours() int64 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *Interval) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *Interval) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type SourceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind SourceRef_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=gitops_server.v1.SourceRef_Kind" json:"kind,omitempty"`
	Name string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SourceRef) Reset() {
	*x = SourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRef) ProtoMessage() {}

func (x *SourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRef.ProtoReflect.Descriptor instead.
func (*SourceRef) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{1}
}

func (x *SourceRef) GetKind() SourceRef_Kind {
	if x != nil {
		return x.Kind
	}
	return SourceRef_GitRepository
}

func (x *SourceRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Artifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checksum     string `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Lastupdateat int32  `protobuf:"varint,2,opt,name=lastupdateat,proto3" json:"lastupdateat,omitempty"`
	Path         string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Revision     string `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	Url          string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{2}
}

func (x *Artifact) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Artifact) GetLastupdateat() int32 {
	if x != nil {
		return x.Lastupdateat
	}
	return 0
}

func (x *Artifact) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Artifact) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *Artifact) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason    string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Message   string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp string `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{3}
}

func (x *Condition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Condition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Condition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Condition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Condition) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type GitRepositoryRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch string `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	Tag    string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Semver string `protobuf:"bytes,3,opt,name=semver,proto3" json:"semver,omitempty"`
	Commit string `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *GitRepositoryRef) Reset() {
	*x = GitRepositoryRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitRepositoryRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepositoryRef) ProtoMessage() {}

func (x *GitRepositoryRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepositoryRef.ProtoReflect.Descriptor instead.
func (*GitRepositoryRef) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{4}
}

func (x *GitRepositoryRef) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *GitRepositoryRef) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GitRepositoryRef) GetSemver() string {
	if x != nil {
		return x.Semver
	}
	return ""
}

func (x *GitRepositoryRef) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace         string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Url               string            `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Reference         *GitRepositoryRef `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	Type              Source_Type       `protobuf:"varint,5,opt,name=type,proto3,enum=gitops_server.v1.Source_Type" json:"type,omitempty"`
	Provider          string            `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
	Bucketname        string            `protobuf:"bytes,7,opt,name=bucketname,proto3" json:"bucketname,omitempty"`
	Region            string            `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	Gitimplementation string            `protobuf:"bytes,9,opt,name=gitimplementation,proto3" json:"gitimplementation,omitempty"`
	Timeout           string            `protobuf:"bytes,10,opt,name=timeout,proto3" json:"timeout,omitempty"`
	SecretRefName     string            `protobuf:"bytes,11,opt,name=secretRefName,proto3" json:"secretRefName,omitempty"`
	Conditions        []*Condition      `protobuf:"bytes,12,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Artifact          *Artifact         `protobuf:"bytes,13,opt,name=artifact,proto3" json:"artifact,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{5}
}

func (x *Source) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Source) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Source) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Source) GetReference() *GitRepositoryRef {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *Source) GetType() Source_Type {
	if x != nil {
		return x.Type
	}
	return Source_Git
}

func (x *Source) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Source) GetBucketname() string {
	if x != nil {
		return x.Bucketname
	}
	return ""
}

func (x *Source) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Source) GetGitimplementation() string {
	if x != nil {
		return x.Gitimplementation
	}
	return ""
}

func (x *Source) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *Source) GetSecretRefName() string {
	if x != nil {
		return x.SecretRefName
	}
	return ""
}

func (x *Source) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Source) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

type GitRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name       string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url        string            `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Reference  *GitRepositoryRef `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	SecretRef  string            `protobuf:"bytes,5,opt,name=secretRef,proto3" json:"secretRef,omitempty"`
	Interval   *Interval         `protobuf:"bytes,6,opt,name=interval,proto3" json:"interval,omitempty"`
	Conditions []*Condition      `protobuf:"bytes,7,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *GitRepository) Reset() {
	*x = GitRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepository) ProtoMessage() {}

func (x *GitRepository) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepository.ProtoReflect.Descriptor instead.
func (*GitRepository) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{6}
}

func (x *GitRepository) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GitRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GitRepository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GitRepository) GetReference() *GitRepositoryRef {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *GitRepository) GetSecretRef() string {
	if x != nil {
		return x.SecretRef
	}
	return ""
}

func (x *GitRepository) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *GitRepository) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type AddGitRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AppName   string            `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Url       string            `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Reference *GitRepositoryRef `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	SecretRef string            `protobuf:"bytes,6,opt,name=secret_ref,json=secretRef,proto3" json:"secret_ref,omitempty"`
	Interval  *Interval         `protobuf:"bytes,7,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *AddGitRepositoryReq) Reset() {
	*x = AddGitRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGitRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGitRepositoryReq) ProtoMessage() {}

func (x *AddGitRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGitRepositoryReq.ProtoReflect.Descriptor instead.
func (*AddGitRepositoryReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{7}
}

func (x *AddGitRepositoryReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddGitRepositoryReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AddGitRepositoryReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddGitRepositoryReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddGitRepositoryReq) GetReference() *GitRepositoryRef {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *AddGitRepositoryReq) GetSecretRef() string {
	if x != nil {
		return x.SecretRef
	}
	return ""
}

func (x *AddGitRepositoryReq) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

type AddGitRepositoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	GitRepository *GitRepository `protobuf:"bytes,2,opt,name=git_repository,json=gitRepository,proto3" json:"git_repository,omitempty"`
}

func (x *AddGitRepositoryRes) Reset() {
	*x = AddGitRepositoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGitRepositoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGitRepositoryRes) ProtoMessage() {}

func (x *AddGitRepositoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGitRepositoryRes.ProtoReflect.Descriptor instead.
func (*AddGitRepositoryRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{8}
}

func (x *AddGitRepositoryRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddGitRepositoryRes) GetGitRepository() *GitRepository {
	if x != nil {
		return x.GitRepository
	}
	return nil
}

type ListGitRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AppName   string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *ListGitRepositoryReq) Reset() {
	*x = ListGitRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitRepositoryReq) ProtoMessage() {}

func (x *ListGitRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitRepositoryReq.ProtoReflect.Descriptor instead.
func (*ListGitRepositoryReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{9}
}

func (x *ListGitRepositoryReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListGitRepositoryReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ListGitRepositoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GitRepositories []*GitRepository `protobuf:"bytes,1,rep,name=git_repositories,json=gitRepositories,proto3" json:"git_repositories,omitempty"`
}

func (x *ListGitRepositoryRes) Reset() {
	*x = ListGitRepositoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitRepositoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitRepositoryRes) ProtoMessage() {}

func (x *ListGitRepositoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitRepositoryRes.ProtoReflect.Descriptor instead.
func (*ListGitRepositoryRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{10}
}

func (x *ListGitRepositoryRes) GetGitRepositories() []*GitRepository {
	if x != nil {
		return x.GitRepositories
	}
	return nil
}

type HelmRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url        string       `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Interval   *Interval    `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"`
	Conditions []*Condition `protobuf:"bytes,5,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *HelmRepository) Reset() {
	*x = HelmRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmRepository) ProtoMessage() {}

func (x *HelmRepository) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmRepository.ProtoReflect.Descriptor instead.
func (*HelmRepository) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{11}
}

func (x *HelmRepository) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmRepository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HelmRepository) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *HelmRepository) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type AddHelmRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string    `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AppName   string    `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Name      string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Url       string    `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Interval  *Interval `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *AddHelmRepositoryReq) Reset() {
	*x = AddHelmRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelmRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelmRepositoryReq) ProtoMessage() {}

func (x *AddHelmRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelmRepositoryReq.ProtoReflect.Descriptor instead.
func (*AddHelmRepositoryReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{12}
}

func (x *AddHelmRepositoryReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddHelmRepositoryReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AddHelmRepositoryReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddHelmRepositoryReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddHelmRepositoryReq) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

type AddHelmRepositoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success        bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	HelmRepository *HelmRepository `protobuf:"bytes,2,opt,name=helm_repository,json=helmRepository,proto3" json:"helm_repository,omitempty"`
}

func (x *AddHelmRepositoryRes) Reset() {
	*x = AddHelmRepositoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelmRepositoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelmRepositoryRes) ProtoMessage() {}

func (x *AddHelmRepositoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelmRepositoryRes.ProtoReflect.Descriptor instead.
func (*AddHelmRepositoryRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{13}
}

func (x *AddHelmRepositoryRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddHelmRepositoryRes) GetHelmRepository() *HelmRepository {
	if x != nil {
		return x.HelmRepository
	}
	return nil
}

type ListHelmRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AppName   string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *ListHelmRepositoryReq) Reset() {
	*x = ListHelmRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHelmRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmRepositoryReq) ProtoMessage() {}

func (x *ListHelmRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmRepositoryReq.ProtoReflect.Descriptor instead.
func (*ListHelmRepositoryReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{14}
}

func (x *ListHelmRepositoryReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListHelmRepositoryReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ListHelmRepositoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelmRepositories []*HelmRepository `protobuf:"bytes,1,rep,name=helm_repositories,json=helmRepositories,proto3" json:"helm_repositories,omitempty"`
}

func (x *ListHelmRepositoryRes) Reset() {
	*x = ListHelmRepositoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHelmRepositoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmRepositoryRes) ProtoMessage() {}

func (x *ListHelmRepositoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmRepositoryRes.ProtoReflect.Descriptor instead.
func (*ListHelmRepositoryRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{15}
}

func (x *ListHelmRepositoryRes) GetHelmRepositories() []*HelmRepository {
	if x != nil {
		return x.HelmRepositories
	}
	return nil
}

// HelmChart
type HelmChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SourceRef  *SourceRef   `protobuf:"bytes,3,opt,name=sourceRef,proto3" json:"sourceRef,omitempty"`
	Chart      string       `protobuf:"bytes,4,opt,name=chart,proto3" json:"chart,omitempty"`
	Version    string       `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Interval   *Interval    `protobuf:"bytes,6,opt,name=interval,proto3" json:"interval,omitempty"`
	Conditions []*Condition `protobuf:"bytes,7,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *HelmChart) Reset() {
	*x = HelmChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmChart) ProtoMessage() {}

func (x *HelmChart) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmChart.ProtoReflect.Descriptor instead.
func (*HelmChart) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{16}
}

func (x *HelmChart) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmChart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmChart) GetSourceRef() *SourceRef {
	if x != nil {
		return x.SourceRef
	}
	return nil
}

func (x *HelmChart) GetChart() string {
	if x != nil {
		return x.Chart
	}
	return ""
}

func (x *HelmChart) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HelmChart) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *HelmChart) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type AddHelmChartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName   string     `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Namespace string     `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	HelmChart *HelmChart `protobuf:"bytes,3,opt,name=helm_chart,json=helmChart,proto3" json:"helm_chart,omitempty"`
}

func (x *AddHelmChartReq) Reset() {
	*x = AddHelmChartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelmChartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelmChartReq) ProtoMessage() {}

func (x *AddHelmChartReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelmChartReq.ProtoReflect.Descriptor instead.
func (*AddHelmChartReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{17}
}

func (x *AddHelmChartReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AddHelmChartReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddHelmChartReq) GetHelmChart() *HelmChart {
	if x != nil {
		return x.HelmChart
	}
	return nil
}

type AddHelmChartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	HelmChart *HelmChart `protobuf:"bytes,2,opt,name=helm_chart,json=helmChart,proto3" json:"helm_chart,omitempty"`
}

func (x *AddHelmChartRes) Reset() {
	*x = AddHelmChartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelmChartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelmChartRes) ProtoMessage() {}

func (x *AddHelmChartRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelmChartRes.ProtoReflect.Descriptor instead.
func (*AddHelmChartRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{18}
}

func (x *AddHelmChartRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddHelmChartRes) GetHelmChart() *HelmChart {
	if x != nil {
		return x.HelmChart
	}
	return nil
}

type ListHelmChartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AppName   string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *ListHelmChartReq) Reset() {
	*x = ListHelmChartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHelmChartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmChartReq) ProtoMessage() {}

func (x *ListHelmChartReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmChartReq.ProtoReflect.Descriptor instead.
func (*ListHelmChartReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{19}
}

func (x *ListHelmChartReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListHelmChartReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ListHelmChartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelmCharts []*HelmChart `protobuf:"bytes,1,rep,name=helm_charts,json=helmCharts,proto3" json:"helm_charts,omitempty"`
}

func (x *ListHelmChartRes) Reset() {
	*x = ListHelmChartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHelmChartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmChartRes) ProtoMessage() {}

func (x *ListHelmChartRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmChartRes.ProtoReflect.Descriptor instead.
func (*ListHelmChartRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{20}
}

func (x *ListHelmChartRes) GetHelmCharts() []*HelmChart {
	if x != nil {
		return x.HelmCharts
	}
	return nil
}

// Bucket
type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace     string          `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Endpoint      string          `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Insecure      bool            `protobuf:"varint,4,opt,name=insecure,proto3" json:"insecure,omitempty"`
	Interval      *Interval       `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
	Provider      Bucket_Provider `protobuf:"varint,6,opt,name=provider,proto3,enum=gitops_server.v1.Bucket_Provider" json:"provider,omitempty"`
	Region        string          `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	SecretRefName string          `protobuf:"bytes,8,opt,name=secretRefName,proto3" json:"secretRefName,omitempty"`
	Timeout       int32           `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Conditions    []*Condition    `protobuf:"bytes,10,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{21}
}

func (x *Bucket) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Bucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bucket) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Bucket) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *Bucket) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *Bucket) GetProvider() Bucket_Provider {
	if x != nil {
		return x.Provider
	}
	return Bucket_Generic
}

func (x *Bucket) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Bucket) GetSecretRefName() string {
	if x != nil {
		return x.SecretRefName
	}
	return ""
}

func (x *Bucket) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Bucket) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type AddBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName   string  `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Namespace string  `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Bucket    *Bucket `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *AddBucketReq) Reset() {
	*x = AddBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBucketReq) ProtoMessage() {}

func (x *AddBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBucketReq.ProtoReflect.Descriptor instead.
func (*AddBucketReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{22}
}

func (x *AddBucketReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AddBucketReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddBucketReq) GetBucket() *Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type AddBucketRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Bucket  *Bucket `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *AddBucketRes) Reset() {
	*x = AddBucketRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBucketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBucketRes) ProtoMessage() {}

func (x *AddBucketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBucketRes.ProtoReflect.Descriptor instead.
func (*AddBucketRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{23}
}

func (x *AddBucketRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddBucketRes) GetBucket() *Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type ListBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AppName   string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *ListBucketReq) Reset() {
	*x = ListBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketReq) ProtoMessage() {}

func (x *ListBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketReq.ProtoReflect.Descriptor instead.
func (*ListBucketReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{24}
}

func (x *ListBucketReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListBucketReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ListBucketRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*Bucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *ListBucketRes) Reset() {
	*x = ListBucketRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketRes) ProtoMessage() {}

func (x *ListBucketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketRes.ProtoReflect.Descriptor instead.
func (*ListBucketRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{25}
}

func (x *ListBucketRes) GetBuckets() []*Bucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type HelmRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseName string       `protobuf:"bytes,1,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Namespace   string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Interval    *Interval    `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"`
	HelmChart   *HelmChart   `protobuf:"bytes,5,opt,name=helm_chart,json=helmChart,proto3" json:"helm_chart,omitempty"`
	Conditions  []*Condition `protobuf:"bytes,6,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *HelmRelease) Reset() {
	*x = HelmRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmRelease) ProtoMessage() {}

func (x *HelmRelease) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmRelease.ProtoReflect.Descriptor instead.
func (*HelmRelease) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{26}
}

func (x *HelmRelease) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *HelmRelease) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmRelease) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmRelease) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *HelmRelease) GetHelmChart() *HelmChart {
	if x != nil {
		return x.HelmChart
	}
	return nil
}

func (x *HelmRelease) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type AddHelmReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName     string       `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Namespace   string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	HelmRelease *HelmRelease `protobuf:"bytes,3,opt,name=helm_release,json=helmRelease,proto3" json:"helm_release,omitempty"`
}

func (x *AddHelmReleaseReq) Reset() {
	*x = AddHelmReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelmReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelmReleaseReq) ProtoMessage() {}

func (x *AddHelmReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelmReleaseReq.ProtoReflect.Descriptor instead.
func (*AddHelmReleaseReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{27}
}

func (x *AddHelmReleaseReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AddHelmReleaseReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddHelmReleaseReq) GetHelmRelease() *HelmRelease {
	if x != nil {
		return x.HelmRelease
	}
	return nil
}

type AddHelmReleaseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	HelmRelease *HelmRelease `protobuf:"bytes,2,opt,name=helm_release,json=helmRelease,proto3" json:"helm_release,omitempty"`
}

func (x *AddHelmReleaseRes) Reset() {
	*x = AddHelmReleaseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHelmReleaseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHelmReleaseRes) ProtoMessage() {}

func (x *AddHelmReleaseRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHelmReleaseRes.ProtoReflect.Descriptor instead.
func (*AddHelmReleaseRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{28}
}

func (x *AddHelmReleaseRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddHelmReleaseRes) GetHelmRelease() *HelmRelease {
	if x != nil {
		return x.HelmRelease
	}
	return nil
}

type ListHelmReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AppName   string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *ListHelmReleaseReq) Reset() {
	*x = ListHelmReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHelmReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmReleaseReq) ProtoMessage() {}

func (x *ListHelmReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmReleaseReq.ProtoReflect.Descriptor instead.
func (*ListHelmReleaseReq) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{29}
}

func (x *ListHelmReleaseReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListHelmReleaseReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ListHelmReleaseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelmReleases []*HelmRelease `protobuf:"bytes,1,rep,name=helm_releases,json=helmReleases,proto3" json:"helm_releases,omitempty"`
}

func (x *ListHelmReleaseRes) Reset() {
	*x = ListHelmReleaseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_source_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHelmReleaseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmReleaseRes) ProtoMessage() {}

func (x *ListHelmReleaseRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_source_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmReleaseRes.ProtoReflect.Descriptor instead.
func (*ListHelmReleaseRes) Descriptor() ([]byte, []int) {
	return file_api_app_source_proto_rawDescGZIP(), []int{30}
}

func (x *ListHelmReleaseRes) GetHelmReleases() []*HelmRelease {
	if x != nil {
		return x.HelmReleases
	}
	return nil
}

var File_api_app_source_proto protoreflect.FileDescriptor

var file_api_app_source_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x54, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x90,
	0x01, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x34, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x11,
	0x0a, 0x0d, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x10,
	0x02, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x87, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x6c, 0x0a, 0x10, 0x47, 0x69,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6d, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0xaa, 0x04, 0x0a, 0x06, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x52, 0x09,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x67, 0x69, 0x74, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x69, 0x74,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x22, 0x30, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x47,
	0x69, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x48, 0x65, 0x6c, 0x6d, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x10, 0x03, 0x22, 0xa8, 0x02, 0x0a, 0x0d, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x09, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x66, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12, 0x36, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x8d, 0x02, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x52, 0x09,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x22, 0x77, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x46, 0x0a, 0x0e, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d, 0x67, 0x69, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x4f, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x12, 0x4a, 0x0a, 0x10, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x67,
	0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xc9,
	0x01, 0x0a, 0x0e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x3b, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x7b, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x49, 0x0a, 0x0f,
	0x68, 0x65, 0x6c, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x12, 0x4d, 0x0a, 0x11, 0x68, 0x65, 0x6c, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x10, 0x68, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x9d, 0x02, 0x0a, 0x09, 0x48, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x48, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52,
	0x09, 0x68, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x22, 0x67, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x48, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x6d, 0x5f,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x09, 0x68, 0x65, 0x6c, 0x6d, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x22, 0x4b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6d, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x50, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x68, 0x65, 0x6c, 0x6d, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c,
	0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x0a, 0x68, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x73, 0x22, 0xa9, 0x03, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x3d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x29, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x0b, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x57, 0x53, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x43, 0x50, 0x10, 0x02, 0x22, 0x79,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x5a, 0x0a, 0x0c, 0x41, 0x64, 0x64,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x48, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x43, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x0b, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x3a, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x52, 0x09, 0x68, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x3b, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x68, 0x65, 0x6c,
	0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x0b,
	0x68, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x68, 0x65,
	0x6c, 0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x0b, 0x68, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x42, 0x0a, 0x0d, 0x68, 0x65, 0x6c, 0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x68, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x61, 0x76, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x77,
	0x65, 0x61, 0x76, 0x65, 0x2d, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_app_source_proto_rawDescOnce sync.Once
	file_api_app_source_proto_rawDescData = file_api_app_source_proto_rawDesc
)

func file_api_app_source_proto_rawDescGZIP() []byte {
	file_api_app_source_proto_rawDescOnce.Do(func() {
		file_api_app_source_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_app_source_proto_rawDescData)
	})
	return file_api_app_source_proto_rawDescData
}

var file_api_app_source_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_app_source_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_api_app_source_proto_goTypes = []interface{}{
	(SourceRef_Kind)(0),           // 0: gitops_server.v1.SourceRef.Kind
	(Source_Type)(0),              // 1: gitops_server.v1.Source.Type
	(Bucket_Provider)(0),          // 2: gitops_server.v1.Bucket.Provider
	(*Interval)(nil),              // 3: gitops_server.v1.Interval
	(*SourceRef)(nil),             // 4: gitops_server.v1.SourceRef
	(*Artifact)(nil),              // 5: gitops_server.v1.Artifact
	(*Condition)(nil),             // 6: gitops_server.v1.Condition
	(*GitRepositoryRef)(nil),      // 7: gitops_server.v1.GitRepositoryRef
	(*Source)(nil),                // 8: gitops_server.v1.Source
	(*GitRepository)(nil),         // 9: gitops_server.v1.GitRepository
	(*AddGitRepositoryReq)(nil),   // 10: gitops_server.v1.AddGitRepositoryReq
	(*AddGitRepositoryRes)(nil),   // 11: gitops_server.v1.AddGitRepositoryRes
	(*ListGitRepositoryReq)(nil),  // 12: gitops_server.v1.ListGitRepositoryReq
	(*ListGitRepositoryRes)(nil),  // 13: gitops_server.v1.ListGitRepositoryRes
	(*HelmRepository)(nil),        // 14: gitops_server.v1.HelmRepository
	(*AddHelmRepositoryReq)(nil),  // 15: gitops_server.v1.AddHelmRepositoryReq
	(*AddHelmRepositoryRes)(nil),  // 16: gitops_server.v1.AddHelmRepositoryRes
	(*ListHelmRepositoryReq)(nil), // 17: gitops_server.v1.ListHelmRepositoryReq
	(*ListHelmRepositoryRes)(nil), // 18: gitops_server.v1.ListHelmRepositoryRes
	(*HelmChart)(nil),             // 19: gitops_server.v1.HelmChart
	(*AddHelmChartReq)(nil),       // 20: gitops_server.v1.AddHelmChartReq
	(*AddHelmChartRes)(nil),       // 21: gitops_server.v1.AddHelmChartRes
	(*ListHelmChartReq)(nil),      // 22: gitops_server.v1.ListHelmChartReq
	(*ListHelmChartRes)(nil),      // 23: gitops_server.v1.ListHelmChartRes
	(*Bucket)(nil),                // 24: gitops_server.v1.Bucket
	(*AddBucketReq)(nil),          // 25: gitops_server.v1.AddBucketReq
	(*AddBucketRes)(nil),          // 26: gitops_server.v1.AddBucketRes
	(*ListBucketReq)(nil),         // 27: gitops_server.v1.ListBucketReq
	(*ListBucketRes)(nil),         // 28: gitops_server.v1.ListBucketRes
	(*HelmRelease)(nil),           // 29: gitops_server.v1.HelmRelease
	(*AddHelmReleaseReq)(nil),     // 30: gitops_server.v1.AddHelmReleaseReq
	(*AddHelmReleaseRes)(nil),     // 31: gitops_server.v1.AddHelmReleaseRes
	(*ListHelmReleaseReq)(nil),    // 32: gitops_server.v1.ListHelmReleaseReq
	(*ListHelmReleaseRes)(nil),    // 33: gitops_server.v1.ListHelmReleaseRes
}
var file_api_app_source_proto_depIdxs = []int32{
	0,  // 0: gitops_server.v1.SourceRef.kind:type_name -> gitops_server.v1.SourceRef.Kind
	7,  // 1: gitops_server.v1.Source.reference:type_name -> gitops_server.v1.GitRepositoryRef
	1,  // 2: gitops_server.v1.Source.type:type_name -> gitops_server.v1.Source.Type
	6,  // 3: gitops_server.v1.Source.conditions:type_name -> gitops_server.v1.Condition
	5,  // 4: gitops_server.v1.Source.artifact:type_name -> gitops_server.v1.Artifact
	7,  // 5: gitops_server.v1.GitRepository.reference:type_name -> gitops_server.v1.GitRepositoryRef
	3,  // 6: gitops_server.v1.GitRepository.interval:type_name -> gitops_server.v1.Interval
	6,  // 7: gitops_server.v1.GitRepository.conditions:type_name -> gitops_server.v1.Condition
	7,  // 8: gitops_server.v1.AddGitRepositoryReq.reference:type_name -> gitops_server.v1.GitRepositoryRef
	3,  // 9: gitops_server.v1.AddGitRepositoryReq.interval:type_name -> gitops_server.v1.Interval
	9,  // 10: gitops_server.v1.AddGitRepositoryRes.git_repository:type_name -> gitops_server.v1.GitRepository
	9,  // 11: gitops_server.v1.ListGitRepositoryRes.git_repositories:type_name -> gitops_server.v1.GitRepository
	3,  // 12: gitops_server.v1.HelmRepository.interval:type_name -> gitops_server.v1.Interval
	6,  // 13: gitops_server.v1.HelmRepository.conditions:type_name -> gitops_server.v1.Condition
	3,  // 14: gitops_server.v1.AddHelmRepositoryReq.interval:type_name -> gitops_server.v1.Interval
	14, // 15: gitops_server.v1.AddHelmRepositoryRes.helm_repository:type_name -> gitops_server.v1.HelmRepository
	14, // 16: gitops_server.v1.ListHelmRepositoryRes.helm_repositories:type_name -> gitops_server.v1.HelmRepository
	4,  // 17: gitops_server.v1.HelmChart.sourceRef:type_name -> gitops_server.v1.SourceRef
	3,  // 18: gitops_server.v1.HelmChart.interval:type_name -> gitops_server.v1.Interval
	6,  // 19: gitops_server.v1.HelmChart.conditions:type_name -> gitops_server.v1.Condition
	19, // 20: gitops_server.v1.AddHelmChartReq.helm_chart:type_name -> gitops_server.v1.HelmChart
	19, // 21: gitops_server.v1.AddHelmChartRes.helm_chart:type_name -> gitops_server.v1.HelmChart
	19, // 22: gitops_server.v1.ListHelmChartRes.helm_charts:type_name -> gitops_server.v1.HelmChart
	3,  // 23: gitops_server.v1.Bucket.interval:type_name -> gitops_server.v1.Interval
	2,  // 24: gitops_server.v1.Bucket.provider:type_name -> gitops_server.v1.Bucket.Provider
	6,  // 25: gitops_server.v1.Bucket.conditions:type_name -> gitops_server.v1.Condition
	24, // 26: gitops_server.v1.AddBucketReq.bucket:type_name -> gitops_server.v1.Bucket
	24, // 27: gitops_server.v1.AddBucketRes.bucket:type_name -> gitops_server.v1.Bucket
	24, // 28: gitops_server.v1.ListBucketRes.buckets:type_name -> gitops_server.v1.Bucket
	3,  // 29: gitops_server.v1.HelmRelease.interval:type_name -> gitops_server.v1.Interval
	19, // 30: gitops_server.v1.HelmRelease.helm_chart:type_name -> gitops_server.v1.HelmChart
	6,  // 31: gitops_server.v1.HelmRelease.conditions:type_name -> gitops_server.v1.Condition
	29, // 32: gitops_server.v1.AddHelmReleaseReq.helm_release:type_name -> gitops_server.v1.HelmRelease
	29, // 33: gitops_server.v1.AddHelmReleaseRes.helm_release:type_name -> gitops_server.v1.HelmRelease
	29, // 34: gitops_server.v1.ListHelmReleaseRes.helm_releases:type_name -> gitops_server.v1.HelmRelease
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_api_app_source_proto_init() }
func file_api_app_source_proto_init() {
	if File_api_app_source_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_app_source_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitRepositoryRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGitRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGitRepositoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitRepositoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelmRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelmRepositoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHelmRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHelmRepositoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelmChartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelmChartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHelmChartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHelmChartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBucketRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelmReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHelmReleaseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHelmReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_source_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHelmReleaseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_app_source_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_app_source_proto_goTypes,
		DependencyIndexes: file_api_app_source_proto_depIdxs,
		EnumInfos:         file_api_app_source_proto_enumTypes,
		MessageInfos:      file_api_app_source_proto_msgTypes,
	}.Build()
	File_api_app_source_proto = out.File
	file_api_app_source_proto_rawDesc = nil
	file_api_app_source_proto_goTypes = nil
	file_api_app_source_proto_depIdxs = nil
}
